// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Users {
  id            Int @id @default(autoincrement())
  email         String @unique
  password      String
  createdAt     DateTime @default(now())
  sessions      Sessions[]
  credentials   Credentials[] 
  notes         Notes[]
  cards         Cards[]
  wifi          Wifi[]
  documents     Documents[]
}

model Sessions {
  id            Int @id @default(autoincrement())
  userId        Int
  token         String
  isValid       Boolean @default(true)
  createdAt     DateTime @default(now())
  user          Users @relation(fields: [userId], references: [id])
}

model Credentials {
  id            Int @id @default(autoincrement())
  userId        Int
  title         String
  url           String 
  username      String
  password      String
  createdAt     DateTime @default(now())
  user          Users @relation(fields: [userId], references: [id])

  @@unique([userId, title])
}

model Notes {
  id            Int @id @default(autoincrement())
  userId        Int
  title         String
  message       String
  createdAt     DateTime @default(now())
  user          Users @relation(fields: [userId], references: [id])

  @@unique([userId, title])
}

model Cards {
  id            Int @id @default(autoincrement())
  userId        Int
  number        String
  name          String
  password      String
  securityCode  String
  expiration    String
  isVirtual     Boolean @default(false)
  title         String
  type          String
  createdAt     DateTime @default(now())
  user          Users @relation(fields: [userId], references: [id])

  @@unique([userId, title])
}

model Wifi {
  id            Int @id @default(autoincrement())
  userId        Int
  name          String
  password      String
  title         String
  createdAt     DateTime @default(now())
  user          Users @relation(fields: [userId], references: [id])
}

model Documents {
  id            Int @id @default(autoincrement())
  userId        Int
  name          String
  issuedAt      String
  number        String
  expiration    String
  issuedBy      String
  type          String
  createdAt     DateTime @default(now())
  user          Users @relation(fields: [userId], references: [id])

  @@unique([userId, type])
}